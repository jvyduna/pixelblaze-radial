{
  "name": "fireFlies",
  "id": "oeq2Gc9mwc37CpA8b",
  "sources": {
    "main": "// This is a fork of Sparks, \n//  - modified to slow down the sparks\n//  - gave them a longer lifetime \n//  - allowed them to loop from one ned to the other\n\nsparkHue = .05;\nsparkSaturation = 1;\nnumSparks = 1 + (pixelCount / 50);\ndecay = 0.99 ;\nmaxSpeed = 0.4\nnewThreshhold = 0.01\n\nsparks = array(numSparks+1);\nsparkX = array(numSparks+1);\npixels = array(pixelCount);\n\nexport function beforeRender(delta) {\n  delta *= .1;\n  \n  for (i = 0; i < pixelCount; i++)\n    pixels[i] = pixels[i] * 0.9\n  \n  for (i = 0; i < numSparks; i++) {\n    if (sparks[i] >= -newThreshhold && sparks[i] <= newThreshhold) {\n      sparks[i] = (maxSpeed/2) - random(maxSpeed);\n      sparkX[i] = random(pixelCount);\n    }\n    \n    sparks[i] *= decay;\n    sparkX[i] += sparks[i] *  delta;\n    \n    if (sparkX[i] >= pixelCount) {\n      sparkX[i] = 0;\n    }\n    \n    if (sparkX[i] < 0) {\n      sparkX[i] = pixelCount - 1;\n    }\n    \n    pixels[floor(sparkX[i])] += sparks[i];\n  }\n}\n\nexport function render(index) {\n  v = pixels[index];\n  hsv(sparkHue, sparkSaturation, v * v * 10)\n}\n"
  },
  "preview": "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"
}