{
  "name": "radial green ripple reflections",
  "id": "Ktjben4j36Wqxnk8N",
  "sources": {
    "main": "/* Also mapped. 12 * 144 of SK9822 wired in setions as:\n        0\n     5     x\n   x         1\n  4           x\n   x         2\n    3      x\n        x\n*/\n\nvar arms = 12\nvar pixPerArm = pixPerRadial = pixelCount / arms\nradials = array(arms)\nfor (i = 0; i < arms; i ++) { radials[i] = array(pixPerArm) } \n\n// Arm remap array -> takes physical segment in index order (wired order)\n// and returns the index of segment where 0 is the straight up arm (12 oo clock)\n// and proceeds clockwise. aRa[chunk] = clockPositionHour\nvar aRa = array(arms);\naRa[0] = 0; aRa[1] = 6; aRa[2] = 2; aRa[3] = 8;\naRa[4] = 4; aRa[5] = 10; aRa[6] = 7; aRa[7] = 1; \naRa[8] = 9; aRa[9] = 3; aRa[10] = 11; aRa[11] = 5; \nfunction indexToRadial(index) {\n  segment = floor(index / pixPerArm)\n  return aRa[segment]\n}\n\n// 0, 1/12, 2/12, ..etc.. 11/12 \nfunction indexToUnitRadial(index) {\n  return indexToRadial(index) / arms\n}\n\n// Takes an index, returns # pixels from center\nfunction indexFromCenter(index) {\n  arm = floor(index / pixPerArm)\n  inbound = (arm % 2) == 0\n  pixIntoArm = index % pixPerArm\n  pixFromCenter = inbound ? (pixPerArm - pixIntoArm - 1) : pixIntoArm\n  return pixFromCenter\n}\n\nvar radialIndex = array(pixelCount)\nfor (i = 0; i < pixelCount; i++) { radialIndex[i] = indexFromCenter(i) }\n\n\n// Takes an index, returns a fraction of an arm's length from center\nfunction indexToUnit(index) {\n  return radialIndex[index] / pixPerArm\n}\n\nvar radialPct = array(pixelCount)\nfor (i = 0; i < pixelCount; i++) { radialPct[i] = indexToUnit(i) }\n\n\n\n\nPI10 = PI2*5\nPI6 = PI2*3\n\nexport function beforeRender(delta) {\n  t1 = time(.03)*PI2\n  t2 = time(.05)*PI2\n  t3 = time(.04)*PI2\n}\n\nexport function render(index) {\n  pct = radialPct[index]\n\n  a = sin(pct*PI10 + t1)\n  a = a*a\n  b = sin(pct*PI6 - t2)\n  c = triangle((pct*3 + 1 + sin(t3))/2 % 1)\n  v = (a+b+c)/3\n  v = v*v\n  hsv(.3, a, v/2)\n}"
  },
  "preview": "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"
}