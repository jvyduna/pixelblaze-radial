{
  "name": "radial rainbow fonts 2",
  "id": "Wcph3ddusCjpjwWkB",
  "sources": {
    "main": "/* Also mapped. 12 * 144 of SK9822 wired in setions as:\n        0\n     5     x\n   x         1\n  4           x\n   x         2\n    3      x\n        x\n*/\n\nvar arms = 12\nvar pixPerArm = pixPerRadial = pixelCount / arms\nradials = array(arms)\nfor (i = 0; i < arms; i ++) { radials[i] = array(pixPerArm) } \n\n// Arm remap array -> takes physical segment in index order (wired order)\n// and returns the index of segment where 0 is the straight up arm (12 oo clock)\n// and proceeds clockwise. aRa[chunk] = clockPositionHour\nvar aRa = array(arms);\naRa[0] = 0; aRa[1] = 6; aRa[2] = 2; aRa[3] = 8;\naRa[4] = 4; aRa[5] = 10; aRa[6] = 7; aRa[7] = 1; \naRa[8] = 9; aRa[9] = 3; aRa[10] = 11; aRa[11] = 5; \nfunction indexToRadial(index) {\n  segment = floor(index / pixPerArm)\n  return aRa[segment]\n}\n\n// 0, 1/12, 2/12, ..etc.. 11/12 \nfunction indexToUnitRadial(index) {\n  return indexToRadial(index) / arms\n}\n\n// Takes an index, returns # pixels from center\nfunction indexFromCenter(index) {\n  arm = floor(index / pixPerArm)\n  inbound = (arm % 2) == 0\n  pixIntoArm = index % pixPerArm\n  pixFromCenter = inbound ? (pixPerArm - pixIntoArm - 1) : pixIntoArm\n  return pixFromCenter\n}\n\nvar radialIndex = array(pixelCount)\nfor (i = 0; i < pixelCount; i++) { radialIndex[i] = indexFromCenter(i) }\n\n\n// Takes an index, returns a fraction of an arm's length from center\nfunction indexToUnit(index) {\n  return radialIndex[index] / pixPerArm\n}\n\nvar radialPct = array(pixelCount)\nfor (i = 0; i < pixelCount; i++) { radialPct[i] = indexToUnit(i) }\n\n\n\n\nexport function beforeRender(delta) {\n  t1 =  time(.1)\n  scale = pixPerArm/2\n  offset = sin(time(.2)* PI2) * pixPerArm/10\n  offsetL = offset/pixPerArm\n}\n\nexport function render(index) {\n  index = radialIndex[index]\n  pixelCount = pixPerArm\n  c = 1-abs((index + offset) - scale)/scale\n  c = wave(c)\n  c = wave(c + t1 + offsetL)\n  hsv(c,1,.2)\n}"
  },
  "preview": "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"
}