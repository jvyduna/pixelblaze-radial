{
  "name": "spin static random colors",
  "id": "8R7CxTec5D2ktmFnD",
  "sources": {
    "main": "/* Also mapped. 12 * 144 of SK9822 wired in setions as:\n        0\n     5     x\n   x         1\n  4           x\n   x         2\n    3      x\n        x\n*/\n\nvar arms = 12\nvar pixPerArm = pixPerRadial = pixelCount / arms\nradials = array(arms)\nfor (i = 0; i < arms; i ++) { radials[i] = array(pixPerArm) } \n\n// Arm remap array -> takes physical segment in index order (wired order)\n// and returns the index of segment where 0 is the straight up arm (12 oo clock)\n// and proceeds clockwise. aRa[chunk] = clockPositionHour\nvar aRa = array(arms);\naRa[0] = 0; aRa[1] = 6; aRa[2] = 2; aRa[3] = 8;\naRa[4] = 4; aRa[5] = 10; aRa[6] = 7; aRa[7] = 1; \naRa[8] = 9; aRa[9] = 3; aRa[10] = 11; aRa[11] = 5; \nfunction indexToRadial(index) {\n  segment = floor(index / pixPerArm)\n  return aRa[segment]\n}\n\n// 0, 1/12, 2/12, ..etc.. 11/12 \nfunction indexToUnitRadial(index) {\n  return indexToRadial(index) / arms\n}\n\n// Takes an index, returns # pixels from center\nfunction indexFromCenter(index) {\n  arm = floor(index / pixPerArm)\n  inbound = (arm % 2) == 0\n  pixIntoArm = index % pixPerArm\n  pixFromCenter = inbound ? (pixPerArm - pixIntoArm - 1) : pixIntoArm\n  return pixFromCenter\n}\n\nvar radialIndex = array(pixelCount)\nfor (i = 0; i < pixelCount; i++) { radialIndex[i] = indexFromCenter(i) }\n\n\n// Takes an index, returns a fraction of an arm's length from center\nfunction indexToUnit(index) {\n  return radialIndex[index] / pixPerArm\n}\n\nvar radialPct = array(pixelCount)\nfor (i = 0; i < pixelCount; i++) { radialPct[i] = indexToUnit(i) }\n\n\n\n// This pattern generates random colors each time it is loaded\n// it works by using a consistent pseudorandom number generator that is seeded\n// with a value that is picked during initialization\n\n// this seed will be set to a random value each time the pattern is loaded\nvar seed = random(0xffff) \n\n// 16 bit xorshift from \n// http://www.retroprogramming.com/2017/07/xorshift-pseudorandom-numbers-in-z80.html\nvar xs\nfunction xorshift() {\n  xs ^= xs << 7\n  xs ^= xs >> 9\n  xs ^= xs << 8\n  return xs\n}\n\n// return a pseudorandom value between 0 and 1\nfunction pseudorandomFraction() {\n  return xorshift() / 100 % 1\n}\n\nexport function beforeRender(delta) {\n  xs = seed //reset xs each render frame so it starts in a consistent state\n}\n\nvar pixels = array(pixPerArm)\nvar sats = array(pixPerArm)\nxs = seed\nfor (i = 0; i < pixPerArm; i++) {\n  pixels[i] = pseudorandomFraction()\n  sats[i] = pseudorandomFraction()\n}\n\nexport function render(index) {\n  pct = radialIndex[index] / pixPerArm +0.01\n  h = pixels[radialIndex[index/2]]\n  s = sats[radialIndex[index/2]]\n  // adjust saturation to favor vibrant colors, but still allow whites/pastels\n  s = 1 - s*s*s \n  v = 1\n  hsv(h, s, v*pct)\n}"
  },
  "preview": "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"
}